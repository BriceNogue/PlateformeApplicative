@page "/salles/details/{id:int}"
@layout AppLayout

@using Shareds.Modeles;
@using Services;

@inject NavigationManager NavigationM
@inject UserService userService

<PageTitle>Details salle</PageTitle>

<h3>ID @id</h3>
<h3>Salle @salle.Id</h3>
<h3>Nom @salle.Numero</h3>

<div class="container">
    <div>
    </div>
    <div>
        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Numéro</th>
                    <th>Marque</th>
                    <th>Adresse IP</th>
                    <th>Adresse MAC</th>
                    <th>SE</th>
                    <th>ROM</th>
                    <th>RAM</th>
                    <th>Salle</th>
                    <th>Type</th>
                    <th>Statut</th>
                </tr>
            </thead>
            <tbody>
                @foreach(var poste in postes)
                {
                    <tr>
                        <td>@poste.Id</td>
                        <td>Poste @poste.Numero</td>
                        <td>@poste.Marque</td>
                        <td>@poste.AdresseIP</td>
                        <td>@poste.AdresseMAC</td>
                        <td>@poste.SE</td>
                        <td>@poste.ROM</td>
                        <td>@poste.RAM</td>
                        <td>@salle.Numero</td>

                        @{
                            var type = typesPoste.Where(t => t.Id == poste.IdType);
                            foreach(var t in type)
                            {
                                <td>@t.Libelle</td>
                            }                          
                        }
                        
                        @if(poste.Statut == true)
                        {
                            <td>Connecté</td>
                        }
                        else
                        {
                            <td>Déconnecté</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    [Parameter]
    public int id { get; set; }

    private SalleModele salle = new SalleModele();
    private SalleService salleService = new SalleService();

    private List<PosteModele> postes = new List<PosteModele>();
    private PosteService posteService = new PosteService();

    private List<TypeModele> typesPoste = new List<TypeModele>();
    private List<TypeModele> typesSalle = new List<TypeModele>();
    private TypeService typeService = new TypeService();

    protected override async Task OnInitializedAsync()
    {      
        var result = await typeService.GetAll();
        typesPoste = result.Where(t => t.Objet == "Poste").ToList<TypeModele>();
        typesSalle = result.Where(t => t.Objet == "Salle").ToList<TypeModele>();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        salle = await GetSalleById(id);
        var res = await posteService.GetAll();
        postes = res.Where(p => p.IdSalle == id).ToList<PosteModele>();

        StateHasChanged();
    }

    private async Task<SalleModele> GetSalleById(int id)
    {
        string userToken = await userService.GetUserToken();

        var res = await salleService.GetById(id, userToken);

        return res;
    }
}