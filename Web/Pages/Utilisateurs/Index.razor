@page "/utilisateurs"

@using Shareds.Modeles;
@using Services;

<PageTitle>Utilisateurs</PageTitle>

<div class="container">
    <div class="top-div">
        <div>
            @if (users.Count == 0 || users.Count == 1)
            {
                <h3>@users.Count utilisateur</h3>
            }
            else
            {
                <h3>@users.Count utilisateurs</h3>
            }
        </div>
        <div class="form-group">
            <label for="Salles" class="form-label">Filtre par salle</label>
            <select class="form-select" @onchange="HandleOnChangeSelectedRole">
                <option disabled selected>Sélectionnez le type de salle</option>
                @foreach (var type in types)
                {
                    <option class="select-item" value="@type.Id">@type.Libelle</option>
                }
            </select>
        </div>
    </div>

    <div class="list-users-div">
        <div class="search-div">
            <div class="form-group">
                <label for="search" class="form-label">Recherche </label>
                <input type="search" class="form-input" id="search" placeholder="Rechercher un utilisateur" />
            </div>
            <div>
                <button type="button" class="btn btn-primary">
                    Recherche
                </button>
            </div>
        </div>
        <div class="list-users">
            @if (users.Count == 0)
            {
                <p class="empty-list">Ce parc ne contient actuellement aucun utilisateur.</p>
            }
            else
            {
                <div class="table-container">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th></th>
                                <th>Nom</th>
                                <th>Prénom</th>
                                <th>Téléphone</th>
                                <th>Email</th>
                                <th>Role</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in users)
                            {
                                <tr>
                                    <td>@user.Id</td>
                                    <td>
                                        <span class="oi oi-person"></span>
                                    </td>
                                    <td>@user.Nom</td>
                                    <td>@user.Prenom</td>
                                    <td>@user.PhoneNumber</td>
                                    <td>@user.Email</td>
                                    @{
                                        var type = types.FirstOrDefault(t => t.Id == user.IdType);
                                        if (type is not null)
                                        {
                                            <td>@type.Libelle</td>
                                        }
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@code {
    private List<UserModele> users = new List<UserModele>();
    private UserService userService = new UserService();
    private UserModele? newUser;

    private List<TypeModele> types = new List<TypeModele>();
    private TypeService typeService = new TypeService();

    protected override async Task OnInitializedAsync()
    {
        users = await GetUsersParc();
        types = await typeService.GetAll();
    }

    private void HandleOnChangeSelectedRole(ChangeEventArgs args)
    {
        var id = args.Value!.ToString();

        //typeId = int.Parse(id!);
    }

    private async Task<List<UserModele>> GetUsersParc()
    {
        if(ParcService.parcSession is not null)
        {
            var parcId = ParcService.parcSession.Id;
            var res = await userService.GetAllByParc(parcId);

            return res;
        }
        else
        {
            return new List<UserModele>();
        }
    }
}
