@page "/login"
@using Shareds.Modeles
@using Services;
@using System.ComponentModel.DataAnnotations

@inject NavigationManager NavigationM

<PageTitle>Se connecter</PageTitle>

<div class="container">
    <div class="form login-form">
        <form>
            <div class="form-header">
                <h3>Connexion</h3>
            </div>
           <div>
                <p>@resText</p>
           </div>
            <div class="form-body">
                <div class="form-group">
                    <label for="email" class="form-label">Email :</label>
                    <input type="email" id="email" @bind="loginM!.Email" class="form-input" />
                </div>
                <div class="form-group">
                    <label for="password" class="form-label">Mot de passe :</label>
                    <input type="password" id="password" @bind="loginM.Password" class="form-input" />
                </div>
                <div>
                    <input type="checkbox" class="form-check-input" />
                    <label>Se souvenir de moi.</label>
                </div>
            </div>
            <div class="form-control">
                <button type="button" class="btn btn-primary" @onclick="(()=> ToLogin(loginM))">Se connecter</button>
            </div>
        </form>
    </div>
    <div>
    </div>
</div>

@code {
    private UserLoginModele? loginM;
    public string resText = "";
    public UserService? userService;

    protected override void OnInitialized()
    {
        userService = new UserService();
        loginM = new UserLoginModele();

        if (UserService.userSession is not null)
        {
            NavigationM.NavigateTo("/dashboard");
        }
    }

    public async void ToLogin(UserLoginModele obj)
    {
        var validationResults = new List<ValidationResult>();
        var validationContext = new ValidationContext(obj, serviceProvider: null, items: null);

        bool isValid = Validator.TryValidateObject(obj, validationContext, validationResults, validateAllProperties: true);

        if (isValid)
        {
            //resText = "";
            var res = await userService!.Login(obj);


            if (res is not null)
                resText = res.Message;

            if(res!.Flag)
                NavigationM.NavigateTo("/dashboard");
        }
        else
        {
            resText = "";
            foreach (var result in validationResults)
            {
                resText += result.ToString();
            }
        }
    }
}
