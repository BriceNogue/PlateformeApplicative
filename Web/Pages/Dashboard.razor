@page "/dashboard"
@layout AppLayout

@using Services;
@using Shareds.Modeles;

@inject NavigationManager NavigationM
@inject UserService userService

<PageTitle>Dashboard</PageTitle>

<h3>Dashboard</h3>

<div class="container container-nbr">
    <div class="nbr nbr-salles">
        <h3> @salles.Count @userT</h3>
        <h3>Salles</h3>
    </div>
    <div class="nbr nbr-postes">
        <h3> @postes.Count </h3>
        <h3>Postes</h3>
    </div>
    <div class="nbr nbr-users">
        <h3> @users.Count </h3>
        <h3>Utilisateurs</h3>
    </div>
</div>

<div class="container container-stat">
    @if (salles.Count == 0)
    {
        <h3>Aucune salle dans ce parc.</h3>
    }
    else
    {
        <div>
            <table class="table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Numéro</th>
                        <th>Capacité</th>
                        <th>Status</th>
                        <th>Type</th>
                        <th>Etablissement</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var salle in salles)
                    {
                        <tr class="d-table-row" @onclick="(()=> GetSalleDetails(salle.Id))">
                            <td>@salle.Id</td>
                            <td>@salle.Numero</td>
                            <td>@salle.Capacite</td>
                            <td>@salle.Status</td>
                            <td>@salle.IdType</td>
                            <td>@salle.IdEtablissement</td>
                            <!--<td>
                                <a href="@($"salles/details/{salle.Id}")">Details</a>
                            </td>-->
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="stat stat-salles">
        </div>
    }
</div>

@code {
    private List<UserModele> users = new List<UserModele>();

    private PosteService posteService = new PosteService();
    private List<PosteModele> postes = new List<PosteModele>();

    private SalleService salleService = new SalleService();
    private List<SalleModele> salles = new List<SalleModele>();

    private string userT = string.Empty;

    protected override void OnInitialized()
    {
        //postes = await posteService.GetAll();
        //salles = await salleService.GetAll();
        //users = await userService.GetAll();
        
        
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        UserSession userS = await userService.GetUserSession();
        userT = await userService.GetUserToken();

        if (userS is null)
        {
            NavigationM.NavigateTo("/login");
        }
    }

    private void GetSalleDetails(int id)
    {
        var url = $"salles/details/{id}";
        NavigationM.NavigateTo(url);
    }

}
