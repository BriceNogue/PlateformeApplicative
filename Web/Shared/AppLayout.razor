@using Shareds.Modeles
@using Web.Services

@inherits LayoutComponentBase

@inject NavigationManager NavigationM
@inject UserService userService
@inject ParcService parcService

<PageTitle>Alpha App</PageTitle>

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <header class="top-row px-4">
            <div class="header-option">
                @if (userSession is not null)
                {
                    <span class="oi oi-person" aria-hidden="true"></span>
                    <span class="list-item user_conected" @onclick="@(()=>ToggleInfos())">
                        @userSession.Name
                    </span>
                }
                <div class="list-items @infosClass">
                    <div>
                        <span class="list-item item infos" @onclick="@(()=>ToggleInfos())">Infos profil</span>
                    </div>
                    <div>
                        <span class="list-item item logout" @onclick="@(()=>Logout())">Quitté</span>
                    </div>
                </div>
            </div>
        </header>

        <article class="content px-4">
            @Body
        </article>

        <footer class="bottom-row px-4">
            <h3>Footer</h3>
        </footer>
    </main>
</div>

@code {

    private UserSession userSession = default!;
    private string infosClass = "";

    protected override void OnInitialized(){}

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        userSession = await userService.GetUserSession();

        StateHasChanged();
    }

    private void ToggleInfos()
    {
        if (infosClass == "")
        {
            infosClass = "list-items-show";
        }else{
            infosClass = "";
        }
    }

    public async void Logout()
    {
        ToggleInfos();
        userService.Logout();
        await parcService.RemoveParcSession();
        NavigationM.NavigateTo("/");
    }
}
